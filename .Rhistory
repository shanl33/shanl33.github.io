q()
q()
?pt
qt(0.025)
qt(0.025, df=Inf)
qt(0.05, df=Inf)
qt(0.05, df=60)
plot(rt(1000, 30, 3))
plot(rnorm(1000))
hist(rnorm(1000))
hist(rt(1000, 30, 3))
hist(rt(1000, 30, 5))
pt(-1.644854, df=Inf)
dt(-1.644854, df=Inf)
pt(1, 1)
qnorm(0.05, sqrt(3.25), lower.tail = F)
qnorm(0.2, sqrt(3.25), lower.tail = T)
knitr::opts_chunk$set(echo = TRUE)
z_a <- qnorm(0.05, sqrt(3.25), lower.tail = F)
sd_T <- 1.5
var_diff <- 1 + sd_T^2
z_a <- qnorm(0.05, sqrt(var_diff), lower.tail = F)
z_b <- qnorm(0.2, sqrt(var_diff), lower.tail = T)
?qnorm
z_a <- qnorm(0.05, mean = 0, sd = sqrt(var_diff), lower.tail = F)
z_b <- qnorm(0.2, mean = 0.5, sd = sqrt(var_diff), lower.tail = T)
z_a <- qnorm(0.05, lower.tail = F)
z_b <- qnorm(0.2, lower.tail = T)
z_b <- qnorm(0.2, lower.tail = F)
(z_a+z_b)^2/0.5^2*var_diff
sd_T <- 2
var_diff <- 1 + sd_T^2
(z_a+z_b)^2/0.5^2*var_diff
sd_T <- 1.5
var_diff <- 1 + sd_T^2
var_diff/(1+1.5^4)
t_a <- qt(0.05, df=Inf)
rm(t_a)
ncp <- 0.5/sqrt(var_diff)
t_b <- qt(0.2, df=Inf, ncp=ncp, lower.tail = F)
((z_a+z_b)/0.5)^2*var_diff
((z_a+t_b)/0.5)^2*var_diff
sd_T <- 2
ncp <- 0.5/sqrt(var_diff)
t_b <- qt(0.2, df=Inf, ncp=ncp, lower.tail = F)
((z_a+t_b)/0.5)^2*var_diff
var_diff <- 1 + sd_T^2
ncp <- 0.5/sqrt(var_diff)
t_b <- qt(0.2, df=Inf, ncp=ncp, lower.tail = F)
((z_a+t_b)/0.5)^2*var_diff
sd_T <- 1.5
var_diff <- 1 + sd_T^2
((z_a-z_b)/0.5)^2*var_diff
sd_T <- 2
var_diff <- 1 + sd_T^2
((z_a-z_b)/0.5)^2*var_diff
set.seed(123)
sim_n <- 1000
X_c <- rnorm(sim_n, 1, 1)
rm(X_c)
x_C <- rnorm(sim_n, 1, 1)
?rnorm
sd_T <- 1.5
x_T <- rnorm(sim_n, 1.5, 1.5)
?t.test
t.test(x_C, x_T, alternative = "less", var.equal = FALSE)
t_distns <- function(n, sd) {
x_C <- rnorm(n, 1, 1)
x_T <- rnorm(n, 1.5, sd)
t_null <- t.test(x_C, x_C, alternative = "less", var.equal = FALSE)
t_alt <- t.test(x_C, x_T, alternative = "less", var.equal = FALSE)
return(list(t_null, t_alt))
}
replicate(5, t_distns(n=sample_n, sd=sd_T))
sample_n <- 100
sd_T <- 1.5
sample_n <- 100
set.seed(123)
sd_T <- 1.5
t_distns <- function(n, sd) {
x_C <- rnorm(n, 1, 1)
x_T <- rnorm(n, 1.5, sd)
t_null <- t.test(x_C, x_C, alternative = "less", var.equal = FALSE)
t_alt <- t.test(x_C, x_T, alternative = "less", var.equal = FALSE)
return(list(t_null, t_alt))
}
replicate(5, t_distns(n=sample_n, sd=sd_T))
test <- replicate(5, t_distns(n=sample_n, sd=sd_T))
test
t_distns <- function(n, sd) {
x_C <- rnorm(n, 1, 1)
x_T <- rnorm(n, 1.5, sd)
t_null <- t.test(x_C, x_C, alternative = "less", var.equal = FALSE)$statistic
t_alt <- t.test(x_C, x_T, alternative = "less", var.equal = FALSE)$statistic
return(list(t_null, t_alt))
}
replicate(5, t_distns(n=sample_n, sd=sd_T))
t_distns <- function(n, sd) {
t_null <- t.test(rnorm(n, 1, 1), rnorm(n, 1, 1), alternative = "less", var.equal = FALSE)$statistic
t_alt <- t.test(rnorm(n, 1, 1), rnorm(n, 1.5, sd), alternative = "less", var.equal = FALSE)$statistic
return(list(t_null, t_alt))
}
replicate(5, t_distns(n=sample_n, sd=sd_T))
replicate(1, t_distns(n=sample_n, sd=sd_T))
replicate(5, t.test(rnorm(n, 1, 1), rnorm(n, 1, 1), alternative = "less", var.equal = FALSE)$statistic)
replicate(5, t.test(rnorm(100, 1, 1), rnorm(100, 1, 1), alternative = "less", var.equal = FALSE)$statistic)
range(1:5, 3:10)
test <- replicate(1000, t.test(rnorm(100, 1, 1), rnorm(100, 1.5, sd), alternative = "less", var.equal = FALSE)$statistic)
test <- replicate(1000, t.test(rnorm(100, 1, 1), rnorm(100, 1.5, 1.5), alternative = "less", var.equal = FALSE)$statistic)
density(test)
plot(density(test))
plot(density(test), type = "l")
lines(density(test), col="red")
test_null <- t_null <- replicate(1000, t.test(rnorm(100, 1, 1), rnorm(100, 1, 1), alternative = "less", var.equal = FALSE)$statistic)
test_alt <- replicate(1000, t.test(rnorm(100, 1, 1), rnorm(100, 1.5, 1.5), alternative = "less", var.equal = FALSE)$statistic)
plot(density(test_null), type = "l")
lines(density(test_alt), col="red")
test_null <- t_null <- replicate(1000, t.test(rnorm(100, 1, 1), rnorm(100, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
test_alt <- replicate(1000, rnorm(100, 1.5, 1.5), t.test(rnorm(100, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
plot(density(test_null), type = "l")
lines(density(test_alt), col="red")
test_null <- t_null <- replicate(1000, t.test(rnorm(100, 1, 1), rnorm(100, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
test_alt <- replicate(1000, rnorm(100, 1.5, 1.5), t.test(rnorm(100, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
plot(density(test_null), type = "l")
lines(density(test_alt), col="red")
sample_n <- 80
test_null <- t_null <- replicate(1000, t.test(rnorm(sample_n, 1, 1), rnorm(sample_n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
test_alt <- replicate(1000, rnorm(sample_n, 1.5, 1.5), t.test(rnorm(sample_n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
plot(density(test_null), type = "l")
lines(density(test_alt), col="red")
pts <- seq(range(test_null), 100)
range(test_null)
r <- range(test_null)
pts <- seq(r[1], r[2], 100)
plot(pts, dt(pts, df=2*sample_n-2), col="red", type = "l")
lines(density(test_null))
plot(pts, dt(pts, df=2*sample_n-2), col="red", type = "l")
test_null <- replicate(1000, t.test(rnorm(sample_n, 1, 1), rnorm(sample_n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
test_alt <- replicate(1000, rnorm(sample_n, 1.5, 1.5), t.test(rnorm(sample_n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
r <- range(test_null)
pts <- seq(r[1], r[2], 100)
plot(pts, dt(pts, df=2*sample_n-2), col="red", type = "l")
r[1]
r <- round(range(test_null), 1)
pts <- seq(r[1], r[2], 100)
plot(pts, dt(pts, df=2*sample_n-2), col="red", type = "l")
pts <- seq(r[1], r[2], 100)
seq(-3.1, 3.1, 10)
?seq
pts <- seq(r[1], r[2], lenght = 100)
pts <- seq(r[1], r[2], length = 100)
plot(pts, dt(pts, df=2*sample_n-2), col = "red", type = "l")
lines(density(test_null))
lines(density(test_alt), col="blue")
r2 <- round(range(test_alt), 1)
pts2 <- seq(r2[1], r2[2], length = 100)
plot(pts2, dt(pts2, df=2*sample_n-2), col = "blue", type = "l")
lines(density(test_alt))
sd_T <- 2
test_alt <- replicate(1000, rnorm(sample_n, 1.5, sd_T), t.test(rnorm(sample_n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
r2 <- round(range(test_alt), 1)
pts2 <- seq(r2[1], r2[2], length = 100)
plot(pts2, dt(pts2, df=2*sample_n-2), col = "blue", type = "l")
lines(density(test_alt))
plot(density(test_null), type = "l")
?plot
library(ggplot2)
ggplot(density(test_null))
qplot(density(test_null))
d_null <- density(test_null)
str(d_null)
d_null <- data.frame(x = density(test_null)$x, y=density(test_null)$y)
ggplot(test_null) + geom_density()
class(test_null)
head(test_null)
ggplot(as.data.frame(test_null)) + geom_density()
d_null <- as.data.frame(test_null)
head(d_null)
ggplot(d_null) + geom_density(aes(test_null))
?geom_density
?quantile
quantile(test_null, 0.95)
test_alt <- replicate(1000, rnorm(sample_n, 1.5, sd_T), t.test(rnorm(sample_n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
test_alt <- replicate(1000, t.test(rnorm(sample_n, 1.5, sd_T), rnorm(sample_n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
plot(density(test_null), type = "l")
lines(density(test_alt), col="red")
r2 <- round(range(test_alt), 1)
pts2 <- seq(r2[1], r2[2], length = 100)
plot(pts2, dt(pts2, df=2*sample_n-2), col = "blue", type = "l")
lines(density(test_alt))
rep(c("a", "b"), each=3)
ts <- data.frame(t = c(test_null, test_alt), Hypothesis = rep("Null", "Alt"), each=sim_n)
ts <- data.frame(t = c(test_null, test_alt), Hypothesis = rep(c("Null", "Alt"), each=sim_n))
sim_n <- 1000
ts <- data.frame(t = c(test_null, test_alt), Hypothesis = rep(c("Null", "Alt"), each=sim_n))
ggplot(ts) + geom_density(aes(test_null, group = Hypothesis))
ggplot(ts, aes(test_null, group = Hypothesis)) + geom_density()
ggplot(ts, aes(x = test_null, group = Hypothesis)) + geom_density()
ggplot(ts, aes(x = t, group = Hypothesis)) + geom_density()
ggplot(ts, aes(x = t, group = Hypothesis, col = Hypothesis)) + geom_density()
ggplot(ts, aes(x = t, group = Hypothesis, col = Hypothesis)) +
geom_density() +
geom_vline(quantile(test_null, 0.95))
?geom_line
?geom_abline
ggplot(ts, aes(x = t, group = Hypothesis, col = Hypothesis)) +
geom_density() +
geom_vline(xintercept = quantile(test_null, 0.95))
ggplot(ts, aes(x = t, group = Hypothesis, col = Hypothesis)) +
geom_density() +
geom_vline(xintercept = quantile(test_null, 0.95), col = "grey")
t_cutoff <- quantile(test_null, 0.95)
test_power <- sum(test_alt >= t_cutoff)/sim_n
sample_n <- 150
test_null <- replicate(sim_n, t.test(rnorm(sample_n, 1, 1), rnorm(sample_n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
test_alt <- replicate(sim_n, t.test(rnorm(sample_n, 1.5, sd_T), rnorm(sample_n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
t_cutoff <- quantile(test_null, 0.95)
test_power <- sum(test_alt >= t_cutoff)/sim_n
ts <- data.frame(t = c(test_null, test_alt), Hypothesis = rep(c("Null", "Alt"), each=sim_n))
sample_n <- 147
test_null <- replicate(sim_n, t.test(rnorm(sample_n, 1, 1), rnorm(sample_n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
test_alt <- replicate(sim_n, t.test(rnorm(sample_n, 1.5, sd_T), rnorm(sample_n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
t_cutoff <- quantile(test_null, 0.95)
test_power <- sum(test_alt >= t_cutoff)/sim_n
ts <- data.frame(t = c(test_null, test_alt), Hypothesis = rep(c("Null", "Alt"), each=sim_n))
ggplot(ts, aes(x = t, group = Hypothesis, col = Hypothesis)) +
geom_density() +
geom_vline(xintercept = t_cutoff, col = "grey")
ggplot(ts, aes(x = t, group = Hypothesis, col = Hypothesis)) +
geom_density() +
geom_vline(xintercept = t_cutoff, col = "grey") +
theme_bw()
ggplot(ts, aes(x = t, group = Hypothesis, col = Hypothesis)) +
geom_density() +
geom_vline(xintercept = t_cutoff, col = "grey") +
theme_classic()
ggplot(ts, aes(x = t, group = Hypothesis, col = Hypothesis)) +
stat_density() +
geom_vline(xintercept = t_cutoff, col = "grey") +
theme_classic()
?stat_density
ggplot(ts, aes(x = t, group = Hypothesis, col = Hypothesis)) +
stat_density(geom = "line") +
geom_vline(xintercept = t_cutoff, col = "grey") +
theme_classic()
ggplot(ts, aes(x = t, group = Hypothesis, col = Hypothesis)) +
geom_density() +
geom_vline(xintercept = t_cutoff, col = "grey") +
theme_classic()
?geom_area
ggplot(ts, aes(x = t, group = Hypothesis, col = Hypothesis)) +
geom_density() +
geom_vline(xintercept = t_cutoff, col = "grey") +
theme_classic() +
geom_ribbon(aes(x=c(t_cutoff, max(test_alt)), ymin=0, ymax=density(test_alt)$y))
ggplot(ts, aes(x = t, group = Hypothesis, col = Hypothesis)) +
geom_density() +
geom_vline(xintercept = t_cutoff, col = "grey") +
theme_classic() +
geom_ribbon(x=c(t_cutoff, max(test_alt), ymin=0,
ymax=density(test_alt)$y))
ggplot(ts, aes(x = t, group = Hypothesis, col = Hypothesis)) +
geom_density() +
geom_vline(xintercept = t_cutoff, col = "grey") +
theme_classic() +
geom_ribbon(x=c(t_cutoff, max(test_alt), ymin=0, ymax=density(test_alt)$y))
ggplot(ts, aes(x = t, group = Hypothesis, col = Hypothesis)) +
geom_density() +
geom_vline(xintercept = t_cutoff, col = "grey") +
theme_classic() +
geom_area(x=c(t_cutoff, max(test_alt), aes(y=density(test_alt)$y)))
?stat_density
alt_density <- data.frame(x=density(test_alt)$x, y=density(test_alt)$y)
alt_shade <- alt_density[x > t_cutoff, ]
alt_shade <- alt_density[alt_density$x > t_cutoff, ]
ggplot(ts, aes(x = t, group = Hypothesis, col = Hypothesis)) +
geom_density() +
geom_vline(xintercept = t_cutoff, col = "grey") +
theme_classic() +
geom_area(data=alt_shade, aes(x=x, y=y))
head(ts)
ggplot(ts) +
geom_density(aes(x = t, group = Hypothesis, col = Hypothesis)) +
geom_vline(xintercept = t_cutoff, col = "grey") +
theme_classic() +
geom_area(data=alt_shade, aes(x=x, y=y))
ggplot(ts) +
geom_density(aes(x = t, group = Hypothesis, col = Hypothesis)) +
#geom_vline(xintercept = t_cutoff, col = "grey") +
theme_classic() +
geom_area(data=alt_shade, aes(x=x, y=y), col = "red")
ggplot(ts) +
geom_density(aes(x = t, group = Hypothesis, col = Hypothesis)) +
#geom_vline(xintercept = t_cutoff, col = "grey") +
theme_classic() +
geom_area(data=alt_shade, aes(x=x, y=y), fill = "red")
ggplot(ts) +
geom_density(aes(x = t, group = Hypothesis, col = Hypothesis)) +
#geom_vline(xintercept = t_cutoff, col = "grey") +
theme_classic() +
geom_area(data=alt_shade, aes(x=x, y=y), fill = "red", alpha = 0.05)
ggplot(ts) +
geom_density(aes(x = t, group = Hypothesis, col = Hypothesis)) +
#geom_vline(xintercept = t_cutoff, col = "grey") +
theme_classic() +
geom_area(data=alt_shade, aes(x=x, y=y), fill = "red", alpha = 0.1)
ggplot(ts) +
geom_density(aes(x = t, group = Hypothesis, col = Hypothesis)) +
theme_classic() +
geom_area(data=alt_shade, aes(x=x, y=y), fill = "red", alpha = 0.1) +
geom_label(aes(label=paste("Power=", round(test_power*100, 1), "%", sep=""),
x=t_cutoff, y=0.1))
?geom_label
round(test_power*100, 1)
?annotate
ggplot(ts) +
geom_density(aes(x = t, group = Hypothesis, col = Hypothesis)) +
theme_classic() +
geom_area(data=alt_shade, aes(x=x, y=y), fill = "red", alpha = 0.5) +
annotate(geom=paste("Power=", round(test_power*100, 1), "%", sep=""), xmin=t_cutoff, y=0.1)
ggplot(ts) +
geom_density(aes(x = t, group = Hypothesis, col = Hypothesis)) +
theme_classic() +
geom_area(data=alt_shade, aes(x=x, y=y), fill = "red", alpha = 0.5) +
annotate(geom="text", xmin=t_cutoff, y=0.1, label=paste("Power=", round(test_power*100, 1), "%", sep=""))
ggplot(ts) +
geom_density(aes(x = t, group = Hypothesis, col = Hypothesis)) +
theme_classic() +
geom_area(data=alt_shade, aes(x=x, y=y), fill = "red", alpha = 0.5) +
annotate(geom="text", x=t_cutoff, y=0.1, label=paste("Power=", round(test_power*100, 1), "%", sep=""))
?geom_label
ggplot(ts) +
geom_density(aes(x = t, group = Hypothesis, col = Hypothesis)) +
theme_classic() +
geom_area(data=alt_shade, aes(x=x, y=y), fill = "red", alpha = 0.5) +
annotate(geom="label", x=t_cutoff, y=0.1, label=paste("Power\n", round(test_power*100, 1), "%", sep=""))
ggplot(ts) +
geom_density(aes(x = t, group = Hypothesis, col = Hypothesis)) +
theme_classic() +
geom_area(data=alt_shade, aes(x=x, y=y), fill = "red", alpha = 0.5) +
annotate(geom="label", x=mean(test_alt), y=0.1, col="red",
label=paste("Power\n", round(test_power*100, 1), "%", sep=""))
t_distns <- function(n, sd, sim) {
t_null <- replicate(sim, t.test(rnorm(n, 1, 1), rnorm(n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
t_alt <- replicate(sim, t.test(rnorm(n, 1.5, sd), rnorm(n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
# Given alpha=0.05
t_cutoff <- quantile(t_null, 0.95)
test_power <- sum(t_alt >= t_cutoff)/sim
# Collect as data frame
ts <- data.frame(t = c(t_null, t_alt), Hypothesis = rep(c("Null", "Alt"), each=sim_n))
# Shading for plot
alt_density <- data.frame(x=density(t_alt)$x, y=density(t_alt)$y)
alt_shade <- alt_density[alt_density$x > t_cutoff, ]
# Plot
p <- ggplot(ts) +
geom_density(aes(x = t, group = Hypothesis, col = Hypothesis)) +
geom_area(data=alt_shade, aes(x = x, y = y), fill = "red", alpha = 0.5) +
annotate(geom="label", x=mean(t_alt), y=0.1, col="red",
label=paste("Power\n", round(test_power*100, 1), "%", sep="")) +
theme_classic()
return(p)
}
t_distns <- function(n, sd, sim) {
t_null <- replicate(sim, t.test(rnorm(n, 1, 1), rnorm(n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
t_alt <- replicate(sim, t.test(rnorm(n, 1.5, sd), rnorm(n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
# Given alpha=0.05
t_cutoff <- quantile(t_null, 0.95)
test_power <- sum(t_alt >= t_cutoff)/sim
# Collect as data frame
ts <- data.frame(t = c(t_null, t_alt), Hypothesis = rep(c("Null", "Alt"), each=sim_n))
# Shading for plot
alt_density <- data.frame(x=density(t_alt)$x, y=density(t_alt)$y)
alt_shade <- alt_density[alt_density$x > t_cutoff, ]
# Plot
p <- ggplot(ts) +
geom_density(aes(x = t, group = Hypothesis, col = Hypothesis)) +
geom_area(data=alt_shade, aes(x = x, y = y), fill = "red", alpha = 0.5) +
annotate(geom="label", x=mean(t_alt), y=0.1, col="red",
label=paste("Power\n", round(test_power*100, 1), "%", sep="")) +
theme_classic()
return(p)
}
sample_n <- 147
sd_T <- 2
sim_n <- 1000
t_distns(sample_n, sd_T, sim_n)
t_distns(100, 1.5, 1000)
t_distns(80, 1.5, 1000)
t_distns(70, 1.5, 1000)
t_distns(78, 1.5, 1000)
t_distns(78, 1.5, 10000)
t_distns <- function(n, sd, sim) {
t_null <- replicate(sim, t.test(rnorm(n, 1, 1), rnorm(n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
t_alt <- replicate(sim, t.test(rnorm(n, 1.5, sd), rnorm(n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
# Given alpha=0.05
t_cutoff <- quantile(t_null, 0.95)
test_power <- sum(t_alt >= t_cutoff)/sim
# Collect as data frame
ts <- data.frame(t = c(t_null, t_alt), Hypothesis = rep(c("Null", "Alt"), each=sim))
# Shading for plot
alt_density <- data.frame(x=density(t_alt)$x, y=density(t_alt)$y)
alt_shade <- alt_density[alt_density$x > t_cutoff, ]
# Plot
p <- ggplot(ts) +
geom_density(aes(x = t, group = Hypothesis, col = Hypothesis)) +
geom_area(data=alt_shade, aes(x = x, y = y), fill = "red", alpha = 0.5) +
annotate(geom="label", x=mean(t_alt), y=0.1, col="red",
label=paste("Power\n", round(test_power*100, 1), "%", sep="")) +
theme_classic()
return(p)
}
t_distns(78, 1.5, 10000)
t_distns(78, 1.5, 5000)
t_distns(78, 1.5, 1000)
t_distns(80, 1.5, 1000)
t_distns(85, 1.5, 1000)
t_distns(85, 2, 1000)
t_distns(120, 2, 1000)
t_distns(124, 2, 1000)
t_distns <- function(n, sd, sim) {
t_null <- replicate(sim, t.test(rnorm(n, 1, 1), rnorm(n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
t_alt <- replicate(sim, t.test(rnorm(n, 1.5, sd), rnorm(n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
# Given alpha=0.05
t_cutoff <- quantile(t_null, 0.95)
test_power <- sum(t_alt >= t_cutoff)/sim
# Collect as data frame
ts <- data.frame(t = c(t_null, t_alt), Hypothesis = rep(c("Null", "Alt"), each=sim))
# Shading for plot
alt_density <- data.frame(x=density(t_alt)$x, y=density(t_alt)$y)
alt_shade <- alt_density[alt_density$x > t_cutoff, ]
# Plot
p <- ggplot(ts) +
geom_density(aes(x = t, group = Hypothesis, col = Hypothesis)) +
geom_area(data=alt_shade, aes(x = x, y = y), fill = "red", alpha = 0.5) +
annotate(geom="label", x=mean(t_alt), y=0.15, col="red",
label=paste("Power\n", round(test_power*100, 1), "%", sep="")) +
theme_classic()
return(p)
}
t_distns(124, 2, 1000)
test_null <- replicate(sim_n, t.test(rnorm(sample_n, 1, 1), rnorm(sample_n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
test_alt <- replicate(sim_n, t.test(rnorm(sample_n, 1.5, sd_T), rnorm(sample_n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
test_cutoff <- quantile(test_null, 0.95)
qnorm(0.95)
qnorm(0.975)
test_null <- replicate(sim_n, t.test(rnorm(sample_n, 1, 1), rnorm(sample_n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
test_cutoff <- quantile(test_null, 0.95)
t_distns(150, 2, 1000)
?sliderInput
library(shiny)
?sliderInput
?inputPanel
sample_n <- 147
sd_T <- 2
sim_n <- 1000
test_null <- replicate(sim_n, t.test(rnorm(sample_n, 1, 1), rnorm(sample_n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
test_alt <- replicate(sim_n, t.test(rnorm(sample_n, 1.5, sd_T), rnorm(sample_n, 1, 1), alternative = "greater", var.equal = FALSE)$statistic)
ts <- data.frame(t = c(test_null, test_alt), Hypothesis = rep(c("Null", "Alt"), each=sim_n))
r2 <- round(range(test_alt), 1)
pts2 <- seq(r2[1], r2[2], length = 100)
?dt
plot(pts2, dt(pts2, df=2*sample_n-2, ncp=0.5/sqrt(1+sd_T^2)), col = "blue", type = "l")
lines(density(test_alt))
plot(pts2, dt(pts2, df=2*sample_n-2, ncp=0.5/sqrt(sample_n/(1+sd_T^2))), col = "blue", type = "l")
lines(density(test_alt))
plot(pts2, dt(pts2, df=2*sample_n-2, ncp=0.5/sqrt(2*sample_n/(1+sd_T^2))), col = "blue", type = "l")
lines(density(test_alt))
plot(pts2, dt(pts2, df=2*sample_n-2, ncp=0.5/*sqrt(2*sample_n/(1+sd_T^2))), col = "blue", type = "l")
plot(pts2, dt(pts2, df=2*sample_n-2, ncp=0.5*sqrt(2*sample_n/(1+sd_T^2))), col = "blue", type = "l")
lines(density(test_alt))
plot(pts2, dt(pts2, df=2*sample_n-2, ncp=0.5*sqrt(sample_n/(1+sd_T^2))), col = "blue", type = "l")
lines(density(test_alt))
plot(pts2, dt(pts2, df=sample_n-1, ncp=0.5*sqrt(sample_n/(1+sd_T^2))), col = "blue", type = "l")
lines(density(test_alt))
str(test_alt)
ttest <- t.test(rnorm(sample_n, 1.5, sd_T), rnorm(sample_n, 1, 1), alternative = "greater", var.equal = FALSE)
str(ttest)
lines(density(test_null), col="red")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
z_b <- qnorm(0.2, lower.tail = F)
z_b
z_a <- qnorm(0.05, lower.tail = F)
plot(pts2, dt(pts2, df=sample_n-1, ncp=20, col = "blue", type = "l")
)
plot(pts2, dt(pts2, df=sample_n-1, ncp=20), col = "blue", type = "l")
plot(pts2, dt(pts2, df=sample_n-1, ncp=5), col = "blue", type = "l")
plot(pts2, dt(seq(2, 10, length.out = 100), df=sample_n-1, ncp=20), col = "blue", type = "l")
plot(pts2, dt(seq(6, 12, length.out = 100), df=sample_n-1, ncp=20), col = "blue", type = "l")
plot(dt(seq(6, 12, length.out = 100), df=sample_n-1, ncp=20), col = "blue", type = "l")
hist(dt(seq(6, 12, length.out = 100), df=sample_n-1, ncp=20))
plot(seq(6, 12, length.out = 100), dt(seq(6, 12, length.out = 100), df=sample_n-1, ncp=20), col = "blue", type = "l")
plot(seq(6, 12, length.out = 100), dt(seq(6, 12, length.out = 100), df=sample_n-1, ncp=10), col = "blue", type = "l")
plot(seq(6, 12, length.out = 100), dt(seq(6, 12, length.out = 100), df=sample_n-1, ncp=5), col = "blue", type = "l")
plot(seq(6, 12, length.out = 100), dt(seq(6, 12, length.out = 100), df=sample_n-1, ncp=8), col = "blue", type = "l")
plot(seq(4, 12, length.out = 100), dt(seq(4, 12, length.out = 100), df=sample_n-1, ncp=8), col = "blue", type = "l")
q()
power.t.test
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
worldTourism <- read.csv("http://api.worldbank.org/v2/en/indicator/ST.INT.RCPT.XP.ZS?downloadformat=csv")
head(worldTourism)
worldTourism <-
readLines("http://api.worldbank.org/v2/en/indicator/ST.INT.RCPT.XP.ZS?downloadformat=csv", n=5)
worldTourism
rm(worldTourism)
q()
q()
setwd("~/Desktop/Project/git_io/shanl33.github.io")
rmarkdown::render_site()
rmarkdown::render_site()
q()
