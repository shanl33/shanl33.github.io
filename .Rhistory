y="Millions of dollars (NZD)")
ggplot(NZcompare1) +
geom_line(aes(x=Year, y=Dollars, group=Sector, col=Sector)) +
labs(title="Dairy exports and international tourism expenditure",
y="Millions of dollars (NZD)")
ggplot(NZexports[NZexports$Year>=1999, ]) +
geom_line(aes(x=Year, y=Exports)) +
labs(title="New Zealand exports from 1999 to 2016",
y="Millions of dollars (NZD)")
compare_p <- ggplot(NZcompare1) +
geom_line(aes(x=Year, y=Dollars, group=Sector, col=Sector)) +
labs(title="Dairy exports and international tourism expenditure",
y="Millions of dollars (NZD)")
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
library(tidyr)
library(plotly)
export_p <- ggplot(NZexports[NZexports$Year>=1999, ]) +
geom_line(aes(x=Year, y=Exports)) +
labs(title="New Zealand exports from 1999 to 2016",
y="Millions of dollars (NZD)")
?subplot
subplot(export_p, compare_p, nrows=2, shareX=TRUE)
compare_p <- ggplot(NZcompare1) +
geom_line(aes(x=Year, y=Dollars, group=Sector, col=Sector)) +
compare_p +
labs(title="Dairy exports and international tourism expenditure",
y="Millions of dollars (NZD)")
compare_p <- ggplot(NZcompare1) +
geom_line(aes(x=Year, y=Dollars, group=Sector, col=Sector))
compare_p +
labs(title="Dairy exports and international tourism expenditure",
y="Millions of dollars (NZD)")
export_p <- ggplot(NZexports[NZexports$Year>=1999, ]) +
geom_line(aes(x=Year, y=Exports)) +
labs(title="New Zealand exports from 1999 to 2016",
y="Millions of dollars (NZD)")
compare_plotly <- ggplotly(compare_p, tooltip=c("x", "y", "group")) %>%
layout(showlegend=FALSE)
subplot(export_p, compare_plotly, nrows=2, shareX=TRUE, titleY=TRUE)
export_p <- ggplot(NZexports[NZexports$Year>=1999, ]) +
geom_line(aes(x=Year, y=Exports)) +
labs(title="New Zealand exports from 1999 to 2016",
y="Millions of dollars (NZD)")
subplot(export_p, compare_plotly, nrows=2, shareX=TRUE)
subplot(export_p, compare_plotly, nrows=2, shareX=TRUE, which_layout="export_p")
compare_p2 <- compare_p +
labs(title="Comparing changes in exports with dairy and tourism sectors",
y="Millions of dollars (NZD)")
compare_plotly <- ggplotly(compare_p2, tooltip=c("x", "y", "group")) %>%
layout(showlegend=FALSE)
subplot(export_p, compare_plotly, nrows=2, shareX=TRUE, titleY=TRUE)
subplot(export_p, compare_plotly, nrows=2, shareX=TRUE, titleY=TRUE)
ggplot(NZcompare2) +
geom_line(aes(x=Year, y=Percentage, group=Sector, colour=Sector)) +
ylim(15, 35) +
ggtitle("Contribution of dairy and tourism sectors to exports in NZ")
q()
?require
knitr::opts_chunk$set(echo = FALSE)
#install.packages("plotly")
library(ggplot2)
library(tidyr)
library(plotly)
compare_p <- ggplot(NZcompare1) +
geom_line(aes(x=Year, y=Dollars, group=Sector, col=Sector))
NZcompare <- read.csv("files/TourismDairy.csv", skip=1, nrows=18)
colnames(NZcompare) <- c("Year", "Dairy", "Tourism")
NZexports <- read.csv("files/NZexports.csv", skip=1, nrows=66)
colnames(NZexports) <- c("Year", "Exports")
NZexports$Exports <- NZexports$Exports/1000
NZcompare1 <- gather(NZcompare, Year)
colnames(NZcompare1) <- c("Year", "Sector", "Dollars")
compare_p <- ggplot(NZcompare1) +
geom_line(aes(x=Year, y=Dollars, group=Sector, col=Sector))
compare_p +
labs(title="Dairy exports and international tourism expenditure (1999 - 2106)",
y="Millions of dollars (NZD)")
setwd("~/Desktop/Stats747/Assgn4")
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
enquiry <- read.csv("enquiry.csv")
rownames(enquiry) <- enquiry$ID # Used for merging later on
educ_inc <- enquiry[(enquiry$Q77<8 & enquiry$Q84<8), c(1, 14,15)]
model <- lm(Q84~Q77, data = educ_inc)
miss_inc <- enquiry[which(enquiry$Q84>7), c(1,14)]
miss_inc$Q84 <- round(predict(model, miss_inc))
model2 <- lm(Q77~Q84, data = educ_inc)
miss_ed <- enquiry[which(enquiry$Q77>7), c(1,15)]
miss_ed$Q77 <- round(predict(model2, miss_ed))
enquiry1 <- apply(enquiry[, 3:13], 2, function(x) ifelse(x>10, NA, x))
enquiry2 <- enquiry1[apply(enquiry1, 1, function(x) !all(is.na(x))), ]
ID <- rownames(enquiry2)
enquiry2 <- cbind.data.frame(ID=ID, enquiry2)
cleaned <- merge(enquiry[,c(1, 2, 14, 15)], enquiry2, by="ID")
cleaned$Q84 <- replace(cleaned$Q84, list = match(miss_inc$ID, cleaned$ID), values = miss_inc$Q84)
inc_bands <- lapply(1:8, function(x) {subset(cleaned, Q84==x)})
inc_var <- function(inc, var) {
n <- which(!is.na(inc_bands[[inc]][[var]])) # Non-NA rows
sample(inc_bands[[inc]][[var]][n], 1)
}
hot_deck <- function(x) {
# Find vars that are NA for this observation
cols <- as.matrix(which(is.na(x)))
# Identify the income level for missing value
income <- as.numeric(x["Q84"])
ran_values <- apply(cols, 1, inc_var, inc=income)
# Replace NA's with randomly selected values
for (i in 1:length(cols)) {
x[cols[i]] <- ran_values[i]
}
return(x)
}
incomplete <- which(!complete.cases(cleaned))
for (i in 1:length(incomplete)) {
cleaned[incomplete[i], ] <- hot_deck(cleaned[incomplete[i], ])
}
head(cleaned)
cleaned[cleaned$Q84==6, ]
write.csv(cleaned, file = "enquiry_hotdeck.csv")
NZcompare <- read.csv("files/TourismDairy.csv", skip=1, nrows=18)
colnames(NZcompare) <- c("Year", "Dairy", "Tourism")
NZexports <- read.csv("files/NZexports.csv", skip=1, nrows=66)
colnames(NZexports) <- c("Year", "Exports")
NZexports$Exports <- NZexports$Exports/1000
ggplot(NZexports) +
geom_line(aes(x=Year, y=Exports)) +
labs(title="New Zealand exports (1952 - 2017)",
y="Millions of dollars (NZD)")
NZcompare <- merge(NZcompare, NZexports, by="Year")
ExpPropn <- do.call(c, lapply(NZcompare[2:3],
function(x){x/NZcompare$Exports*100}))
NZcompare2 <- data.frame("Year"=rep(NZcompare$Year, 2),
"Percentage"=round(ExpPropn, 1),
"Sector"=c(rep(c("Dairy", "Tourism"), each=nrow(NZcompare))))
ggplot(NZcompare2) +
geom_line(aes(x=Year, y=Percentage, group=Sector, colour=Sector)) +
ylim(15, 35) +
ggtitle("Contribution of dairy and tourism sectors to exports in NZ (1999 - 2016)")
sessionInfo()
knitr::opts_chunk$set(echo = FALSE)
#install.packages("plotly")
library(ggplot2)
library(tidyr)
library(plotly)
#webshot::install_phantomjs()
NZcompare <- read.csv("files/TourismDairy.csv", skip=1, nrows=18)
colnames(NZcompare) <- c("Year", "Dairy", "Tourism")
NZcompare[2:3] <- NZcompare[2:3]/1000
summary(NZcompare)
NZexports <- read.csv("files/NZexports.csv", skip=1, nrows=66)
colnames(NZexports) <- c("Year", "Exports")
NZexports$Exports <- NZexports$Exports/1000000
ggplot(NZexports) +
geom_line(aes(x=Year, y=Exports)) +
labs(title="New Zealand exports (1952 - 2017)",
y="Billions of dollars (NZD)")
NZcompare1 <- gather(NZcompare, Year)
colnames(NZcompare1) <- c("Year", "Sector", "Dollars")
compare_p <- ggplot(NZcompare1) +
geom_line(aes(x=Year, y=Dollars, group=Sector, col=Sector))
compare_p +
labs(title="Dairy exports and international tourism expenditure (1999 - 2016)",
y="Millions of dollars (NZD)")
export_p <- ggplot(NZexports[NZexports$Year>=1999, ]) +
geom_line(aes(x=Year, y=Exports))
compare_p2 <- compare_p +
labs(title="Comparisons with total exports (1999 - 2016)",
y="Billions of dollars (NZD)")
compare_plotly <- ggplotly(compare_p2, tooltip=c("x", "y", "group")) %>%
layout(showlegend=FALSE)
subplot(export_p, compare_plotly, nrows=2, shareX=TRUE, titleY=TRUE)
export_p <- ggplot(NZexports[NZexports$Year>=1999, ]) +
geom_line(aes(x=Year, y=Exports)) +
labs(y=NULL)
subplot(export_p, compare_plotly, nrows=2, shareX=TRUE, titleY=TRUE)
subplot(export_p, compare_plotly, nrows=2, shareX=TRUE, titleY=TRUE)
NZcompare <- merge(NZcompare, NZexports, by="Year")
ExpPropn <- do.call(c, lapply(NZcompare[2:3],
function(x){x/NZcompare$Exports*100}))
NZcompare2 <- data.frame("Year"=rep(NZcompare$Year, 2),
"Percentage"=round(ExpPropn, 1),
"Sector"=c(rep(c("Dairy", "Tourism"), each=nrow(NZcompare))))
propn_plot <- ggplot(NZcompare2) +
geom_line(aes(x=Year, y=Percentage, group=Sector, colour=Sector)) +
ylim(15, 35) +
ggtitle("Contribution of dairy and tourism sectors to exports (1999 - 2016)")
propn_plotly <- ggplotly(propn_plot, tooltip=c("x", "y", "group")) %>%
layout(showlegend=FALSE)
subplot(export_p, propn_plotly, nrows=2, shareX=TRUE, titleY=TRUE)
export_p <- ggplot(NZexports[NZexports$Year>=1999, ]) +
geom_line(aes(x=Year, y=Exports)) +
labs(y="$")
compare_plotly <- ggplotly(compare_p2, tooltip=c("x", "y", "group")) %>%
layout(showlegend=FALSE)
subplot(export_p, compare_plotly, nrows=2, shareX=TRUE, titleY=TRUE)
propn_plot <- ggplot(NZcompare2) +
geom_line(aes(x=Year, y=Percentage, group=Sector, colour=Sector)) +
ylim(15, 35) +
labs(title="Proportional contribution to exports (1999 - 2016)", y="%")
propn_plotly <- ggplotly(propn_plot, tooltip=c("x", "y", "group")) %>%
layout(showlegend=FALSE)
subplot(export_p, propn_plotly, nrows=2, shareX=TRUE, titleY=TRUE)
compare_p2 <- compare_p +
labs(title="Comparisons with total exports (1999 - 2016)",
y=NULL)
export_p <- ggplot(NZexports[NZexports$Year>=1999, ]) +
geom_line(aes(x=Year, y=Exports)) +
labs(y="Billions of dollars (NZD)")
compare_plotly <- ggplotly(compare_p2, tooltip=c("x", "y", "group")) %>%
layout(showlegend=FALSE)
subplot(export_p, compare_plotly, nrows=2, shareX=TRUE, titleY=TRUE)
subplot(export_p, propn_plotly, nrows=2, shareX=TRUE, titleY=TRUE)
compare_p2 <- compare_p +
labs(title="Comparisons with total exports (1999 - 2016)",
y="Billions of dollars (NZD)")
compare_plotly <- ggplotly(compare_p2, tooltip=c("x", "y", "group")) %>%
layout(showlegend=FALSE)
subplot(export_p, compare_plotly, nrows=2, shareX=TRUE)
export_p <- ggplot(NZexports[NZexports$Year>=1999, ]) +
geom_line(aes(x=Year, y=Exports)) +
labs(y="Billions NZD")
compare_p2 <- compare_p +
labs(title="Comparisons with total exports (1999 - 2016)",
y="Billions NZD")
compare_plotly <- ggplotly(compare_p2, tooltip=c("x", "y", "group")) %>%
layout(showlegend=FALSE)
subplot(export_p, compare_plotly, nrows=2, shareX=TRUE, titleY=TRUE)
subplot(export_p, propn_plotly, nrows=2, shareX=TRUE, titleY=TRUE)
WBtourism <- read.csv("files/WBtourism.csv", skip=4)
head(WBtourism)
colnames(WBtourism)
AUStourism <- WBtourism[WBtourism$Country.Name=="Australia", 44:61]
AUStourism
AUStourism <- WBtourism[WBtourism$Country.Name=="Australia", 44:60]
AUStourism <- data.frame(Year=1999:2015, Percentage=WBtourism[WBtourism$Country.Name=="Australia", 44:60])
AUStourism <- data.frame(Year=1999:2015,
Percentage=as.vector(WBtourism[WBtourism$Country.Name=="Australia", 44:60]))
AUStourism <- data.frame("Year" = 1999:2015,
"Percentage" = as.vector(WBtourism[WBtourism$Country.Name=="Australia", 44:60]))
AUStourism <- data.frame(Year = 1999:2015)
NZcompare2 <- data.frame(Year = rep(NZcompare$Year, 2),
Percentage = round(ExpPropn, 1),
Sector = c(rep(c("Dairy", "Tourism"), each=nrow(NZcompare))))
NZcompare2
propn_plot <- ggplot(NZcompare2) +
geom_line(aes(x=Year, y=Percentage, group=Sector, colour=Sector)) +
ylim(15, 35) +
labs(title="Proportional contribution to exports (1999 - 2016)", y="%")
propn_plotly <- ggplotly(propn_plot, tooltip=c("x", "y", "group")) %>%
layout(showlegend=FALSE)
subplot(export_p, propn_plotly, nrows=2, shareX=TRUE, titleY=TRUE)
class(WBtourism[WBtourism$Country.Name=="Australia", 44:60])
AUStourism <- data.frame(Year = 1999:2015,
Percentage = vector(WBtourism[WBtourism$Country.Name=="Australia", 44:60]))
AUStourism <- data.frame(Year = 1999:2015,
Percentage = WBtourism[WBtourism$Country.Name=="Australia", 44:60])
head(AUStourism)
AUStourism <- data.frame(Year = 1999:2015,
Percentage = t(WBtourism[WBtourism$Country.Name=="Australia", 44:60]))
head(AUStourism)
AUStourism <- data.frame(Year = 1999:2015,
t(WBtourism[WBtourism$Country.Name=="Australia", 44:60]))
head(AUStourism)
AUStourism <- data.frame(1999:2015,
t(WBtourism[WBtourism$Country.Name=="Australia", 44:60]))
head(AUStourism)
colnames(AUStourism) <- c("Year", "Percentage")
AUStourism$Percentage <- round(AUStourism$Percentage, 1)
head(NZcompare2)
AUStourism$Country <- rep_len("Australia", nrow(AUStourism))
INTtourism <- c(AUStourism, NZcompare2[NZcompare2$Sector=="Tourism", ])
INTtourism <- rbind.data.frame(AUStourism,
NZcompare2[NZcompare2$Sector=="Tourism", ])
INTtourism <- rbind(AUStourism,
NZcompare2[NZcompare2$Sector=="Tourism", ])
?c
?rbind
INTtourism <- rbind.data.frame(AUStourism,
NZcompare2[NZcompare2$Sector=="Tourism", ],
check.names=FALSE)
NZtourism <- NZcompare2[NZcompare2$Sector=="Tourism", ]
NZtourism <- NZcompare2[NZcompare2$Sector=="Tourism", 1:2]
NZtourism$Country <- rep_len("NZ", nrow(NZtourism))
INTtourism <- c(AUStourism, NZtourism)
INTtourism <- rbind.data.frame(AUStourism, NZtourism)
head(INTtourism)
rownames(AUStourism) <- NULL
INTtourism <- rbind.data.frame(AUStourism, NZtourism)
head(INTtourism)
ggplot(INTtourism) +
geom_line(aes(x=Year, y=Percentage, group=Country, colour=Country)) +
#ylim(15, 35) +
labs(title="Tourism's contribution to exports in Australia and NZ (1999 - 2016)", y="%")
ggplot(INTtourism) +
geom_line(aes(x=Year, y=Percentage, group=Country, colour=Country)) +
labs(title="Tourism's contribution to exports in Australia and NZ (1999 - 2016)", y="%") +
scale_color_brewer(type="qual")
ggplot(INTtourism) +
geom_line(aes(x=Year, y=Percentage, group=Country, colour=Country)) +
labs(title="Tourism's contribution to exports in Australia and NZ (1999 - 2016)", y="%") +
scale_color_discrete(c("red", "blue"))
?scale_color_brewer
ggplot(INTtourism) +
geom_line(aes(x=Year, y=Percentage, group=Country, colour=Country)) +
labs(title="Tourism's contribution to exports in Australia and NZ (1999 - 2016)", y="%") +
scale_color_brewer(type="qual", palette=2)
UNdairy <- read.csv("files/FAOdairy.csv")
head(UNdairy)
UNdairy <- UNdairy[c("Area", "Year", "Value")]
?aggregate
INTdairy <- aggregate.data.frame(UNdairy, by=list("Area", "Year"), FUN=sum(UNdairy$Value))
aggregate.data.frame()
?aggregate.data.frame
INTdairy <- aggregate.data.frame(UNdairy$Value, by=list(UNdairy$Area, UNdairy$Year), FUN=sum)
head(INTdairy)
tail(INTdairy)
is.na(UNdairy$Value)
summary(UNdairy)
1363-66
UNdairy <- UNdairy[!is.na(UNdairy), ]
head(UNdairy)
tail(UNdairy)
UNdairy <- read.csv("files/FAOdairy.csv")
UNdairy <- UNdairy[c("Area", "Year", "Value")]
UNdairy <- UNdairy[complete.cases(UNdairy), ]
INTdairy <- aggregate.data.frame(UNdairy$Value, by=list(UNdairy$Area, UNdairy$Year), FUN=sum)
summary(UNdairy)
(2014-1961+1)*2
head(INTdairy)
colnames(INTdairy) <- c("Country", "Year", "Tonnes")
summary(INTdairy)
colnames(INTdairy) <- c("Country", "Year", "Volume")
INTdairy$Volume <- INTdairy$Volume/1000000
ggplot(INTdairy) +
geom_line(aes(x=Year, y=Volume, group=Country, colour=Country)) +
labs(title="Dairy in Australia and NZ (1961 - 2014)", y="Volume in millions of tonnes") +
scale_color_brewer(type="qual", palette=2)
UNdairy <- read.csv("files/UNdairy.csv")
UNdairy <- UNdairy[c("Area", "Year", "Value")]
UNdairy <- UNdairy[complete.cases(UNdairy), ]
INTdairy <- aggregate.data.frame(UNdairy$Value, by=list(UNdairy$Area, UNdairy$Year), FUN=sum)
colnames(INTdairy) <- c("Country", "Year", "Volume")
INTdairy$Volume <- INTdairy$Volume/1000000
ggplot(INTdairy) +
geom_line(aes(x=Year, y=Volume, group=Country, colour=Country)) +
labs(title="Dairy in Australia and NZ (1999 - 2014)", y="Volume in millions of tonnes") +
scale_color_brewer(type="qual", palette=2)
UNdairy <- read.csv("files/UNdairy.csv")
UNdairy <- UNdairy[c("Area", "Year", "Value")]
UNdairy <- UNdairy[complete.cases(UNdairy), ]
INTdairy <- aggregate.data.frame(UNdairy$Value, by=list(UNdairy$Area, UNdairy$Year), FUN=sum)
colnames(INTdairy) <- c("Country", "Year", "Volume")
INTdairy$Volume <- INTdairy$Volume/1000000
tourism_p <- ggplot(INTdairy) +
geom_line(aes(x=Year, y=Volume, group=Country, colour=Country)) +
labs(title="Dairy production in Australia and New Zealand (1999 - 2014)", y="Millions of tonnes") +
scale_color_brewer(type="qual", palette=2)
tourism_ptly <- ggplotly(tourism_p, tooltip=c("x", "y", "group"))
NZcompare <- read.csv("files/TourismDairy.csv", skip=1, nrows=18)
colnames(NZcompare) <- c("Year", "Dairy", "Tourism")
NZcompare[2:3] <- NZcompare[2:3]/1000
NZcompare2 <- data.frame(Year = rep(NZcompare$Year, 2),
Percentage = round(ExpPropn, 1),
Sector = c(rep(c("Dairy", "Tourism"), each=nrow(NZcompare))))
NZcompare <- merge(NZcompare, NZexports, by="Year")
NZexports <- read.csv("files/NZexports.csv", skip=1, nrows=66)
colnames(NZexports) <- c("Year", "Exports")
NZexports$Exports <- NZexports$Exports/1000000
NZcompare <- merge(NZcompare, NZexports, by="Year")
ExpPropn <- do.call(c, lapply(NZcompare[2:3],
function(x){x/NZcompare$Exports*100}))
NZcompare2 <- data.frame(Year = rep(NZcompare$Year, 2),
Percentage = round(ExpPropn, 1),
Sector = c(rep(c("Dairy", "Tourism"), each=nrow(NZcompare))))
dairyNZ_p <- ggplot(NZcompare2[NZcompare2$Sector=="Dairy", ]) +
geom_line(aes(x=Year, y=Percentage), colour="red") +
labs(y="% of NZ exports")
subplot(dairyNZ_p, tourism_ptly, nrows=2, shareX=TRUE, titleY=TRUE)
subplot(dairyNZ_p, tourism_ptly, nrows=2, shareX=TRUE, titleY=TRUE)
dairyNZ_p <- ggplot(NZcompare2[NZcompare2$Sector=="Dairy", ]) +
geom_line(aes(x=Year, y=Percentage, colour=Sector)) +
labs(y="% of NZ exports")
subplot(dairyNZ_p, tourism_ptly, nrows=2, shareX=TRUE, titleY=TRUE)
tourism_p <- ggplot(INTdairy) +
geom_line(aes(x=Year, y=Volume, group=Country, colour=Country)) +
labs(title="Dairy production in Australia and New Zealand (1999 - 2014)", y="Millions of tonnes") +
scale_color_brewer(type="qual", palette=2) +
xlim(1999:2015)
tourism_p <- ggplot(INTdairy) +
geom_line(aes(x=Year, y=Volume, group=Country, colour=Country)) +
labs(title="Dairy production in Australia and New Zealand (1999 - 2014)", y="Millions of tonnes") +
scale_color_brewer(type="qual", palette=2) +
xlim(c(1999,2015))
tourism_ptly <- ggplotly(tourism_p, tooltip=c("x", "y", "group"))
subplot(tourism_ptly, dairyNZ_p, nrows=2, shareX=TRUE, titleY=TRUE)
dairyNZ_p <- ggplot(NZcompare2[NZcompare2$Sector=="Dairy", ]) +
geom_line(aes(x=Year, y=Percentage, colour=Sector)) +
labs(y="% of NZ exports") +
ylim(15, 35)
subplot(tourism_ptly, dairyNZ_p, nrows=2, shareX=TRUE, titleY=TRUE)
subplot(tourism_ptly, dairyNZ_p, nrows=2, shareX=TRUE, titleY=TRUE) %>%
layout(legend = list(orientation = 'h'))
subplot(tourism_ptly, dairyNZ_p, nrows=2, shareX=TRUE, titleY=TRUE) %>%
layout(legend = list(orientation = 'v'))
subplot(tourism_ptly, dairyNZ_p, nrows=2, shareX=TRUE, titleY=TRUE) %>%
layout(legend = list(orientation = 'b'))
subplot(tourism_ptly, dairyNZ_p, nrows=2, shareX=TRUE, titleY=TRUE) %>%
layout(legend = list(orientation='h', x = 0.1, y = 0.5))
subplot(tourism_ptly, dairyNZ_p, nrows=2, shareX=TRUE, titleY=TRUE) %>%
layout(legend = list(orientation='h', x = 0, y = 0.5))
subplot(tourism_ptly, dairyNZ_p, nrows=2, shareX=TRUE, titleY=TRUE) %>%
layout(legend = list(orientation='h', x = 0, y = 0.45))
subplot(tourism_ptly, dairyNZ_p, nrows=2, shareX=TRUE, titleY=TRUE) %>%
layout(legend = list(orientation='h', x = 0.01, y = 0.48))
subplot(tourism_ptly, dairyNZ_p, nrows=2, shareX=TRUE, titleY=TRUE) %>%
layout(legend = list(orientation='h', x = 0.01, y = 0.46))
subplot(tourism_ptly, dairyNZ_p, nrows=2, shareX=TRUE, titleY=TRUE) %>%
layout(legend = list(orientation='h', x = 0.01, y = 0.46))
q()
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
enquiry <- read.csv("enquiry.csv")
rownames(enquiry) <- enquiry$ID # Used for merging later on
educ_inc <- enquiry[(enquiry$Q77<8 & enquiry$Q84<8), c(1, 14,15)]
model <- lm(Q84~Q77, data = educ_inc)
miss_inc <- enquiry[which(enquiry$Q84>7), c(1,14)]
miss_inc$Q84 <- round(predict(model, miss_inc))
model2 <- lm(Q77~Q84, data = educ_inc)
miss_ed <- enquiry[which(enquiry$Q77>7), c(1,15)]
miss_ed$Q77 <- round(predict(model2, miss_ed))
enquiry1 <- apply(enquiry[, 3:13], 2, function(x) ifelse(x>10, NA, x))
enquiry2 <- enquiry1[apply(enquiry1, 1, function(x) !all(is.na(x))), ]
ID <- rownames(enquiry2)
enquiry2 <- cbind.data.frame(ID=ID, enquiry2)
cleaned <- merge(enquiry[,c(1, 2, 14, 15)], enquiry2, by="ID")
cleaned$Q84 <- replace(cleaned$Q84, list = match(miss_inc$ID, cleaned$ID), values = miss_inc$Q84)
inc_bands <- lapply(1:8, function(x) {subset(cleaned, Q84==x)})
inc_var <- function(inc, var) {
n <- which(!is.na(inc_bands[[inc]][[var]])) # Non-NA rows
sample(inc_bands[[inc]][[var]][n], 1)
}
hot_deck <- function(x) {
# Find vars that are NA for this observation
cols <- as.matrix(which(is.na(x)))
# Identify the income level for missing value
income <- as.numeric(x["Q84"])
ran_values <- apply(cols, 1, inc_var, inc=income)
# Replace NA's with randomly selected values
for (i in 1:length(cols)) {
x[cols[i]] <- ran_values[i]
}
return(x)
}
incomplete <- which(!complete.cases(cleaned))
for (i in 1:length(incomplete)) {
cleaned[incomplete[i], ] <- hot_deck(cleaned[incomplete[i], ])
}
head(cleaned)
sapply(cleaned[5:6], hist)
sapply(cleaned[5:6], barplot)
?hist
?barplot
sapply(cleaned[5:6], hist)
ggplot(cleaned$Q32A1) + geom_histogram()
ggplot(as.data.frame(cleaned$Q32A1), aes(x=Q32A1)) + geom_histogram()
ggplot(as.data.frame(cleaned$Q32A1)) + geom_histogram()
barplot(table(cleaned$Q32A1))
barplot(table(cleaned$Q32A1), main="Distribution of overall customer satisfaction", x="Rating out of 10", y="Frequency")
barplot(table(cleaned$Q32A1), title="Distribution of overall customer satisfaction", x="Rating out of 10", y="Frequency")
barplot(table(cleaned$Q32A1), main="Distribution of overall customer satisfaction", xlab="Rating out of 10", ylab="Frequency")
binary <- function(x) {
ifelse(x>=9, 1, 0)
}
binary(cleaned$Q32A1)
head(cleaned)
colnames(cleaned)
clean.binary <- sapply(cleaned[c(2, 5:15)])
clean.binary <- sapply(cleaned[c(2, 5:15)], binary)
head(clean.binary)
head(clean)
head(cleaned)
clean.binary <- cbind(clean.binary, cleaned[c("ID", "Q77", "Q84")])
head(clean.binary)
write.csv(clean.binary, file = "enquiry_hotdeck.csv")
barplot(table(clean.binary$Q32A1), main="Distribution of overall customer satisfaction", xlab="Rating out of 10", ylab="Frequency")
barplot(table(clean.binary$Q32A1), main="Overall customer satisfaction as a binary response", xlab="Rating of at least 9 out of 10", ylab="Frequency")
load("files/nzqa.sch.RData")
setwd("~/Desktop/Project/slee205_Honours/Notes/MidSemReports/Current")
load("files/nzqa.sch.RData")
nzqa.sch$Decile <- as.factor(nzqa.sch$Decile)
summary(nzqa.sch$Min.Cohort)
summary(nzqa.sch[16:19])
head(nzqa.sch, n=3)
library(bookdown)
sessionInfo()
getwd()
setwd("~/Desktop/Project/slee205_Honours/Notes/MidSemReports/Current")
colnames(nzqa.sch)
q()
?wspoissonTest
getwd()
setwd("~/Desktop/Project/git_io/shanl33.github.io")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
setwd("~/Desktop/Project/git_io/shanl33.github.io")
rmarkdown::render_site()
install.packages("dsrTest")
library(dsrTest)
q()
